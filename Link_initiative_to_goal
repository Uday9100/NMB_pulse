import json
import boto3
import uuid
import datetime

dynamodb = boto3.resource('dynamodb')
goals_table = dynamodb.Table('NMB_CUSTOMERS_GOALS')
initiatives_table = dynamodb.Table('NMB_BUSINESS_INITIATIVES')
links_table = dynamodb.Table('NMB_CUSTOMERGOALS_INITIATIVES')

def lambda_handler(event, context):
    query_params = event.get('queryStringParameters') or {}
    method = event.get('httpMethod')
    username = event.get('requestContext', {}).get('authorizer', {}).get('claims', {}).get('cognito:username', 'system')

    if method == 'GET':
        action = query_params.get('action')
        if action == 'linked_initiatives':
            return handle_linked_initiatives(query_params)
        else:
            return response(400, {'message': 'Invalid action'})
    else:
        return response(405, {'message': 'Method Not Allowed'})

def handle_linked_initiatives(query_params):
    cusgoa_code = query_params.get('CUSGOA_CODE')
    if not cusgoa_code:
        return response(400, {'message': "Missing 'CUSGOA_CODE' in query parameters"})

    try:
        # Get linked initiatives from the links table
        linked_resp = links_table.scan(
            FilterExpression='CUSGOA_CODE = :g',
            ExpressionAttributeValues={':g': cusgoa_code}
        )
        linked_items = linked_resp.get('Items', [])

        linked_initiative_codes = {item['INITIATIVE_CODE'] for item in linked_items}

        if not linked_initiative_codes:
            return response(200, {'initiatives': []})

        initiatives = []
        for code in linked_initiative_codes:
            resp = initiatives_table.get_item(Key={'INITIATIVE_CODE': code})
            if 'Item' in resp:
                initiatives.append(resp['Item'])

        return response(200, {'initiatives': initiatives})

    except Exception as e:
        return response(500, {'message': 'Error retrieving initiatives', 'error': str(e)})

def response(status_code, body):
    return {
        'statusCode': status_code,
        'headers': {
            'Content-Type': 'application/json',
            'Access-Control-Allow-Origin': '*'
        },
        'body': json.dumps(body)
    }
